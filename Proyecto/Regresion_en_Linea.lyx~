#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass book
\use_default_options true
\maintain_unincluded_children false
\language spanish-mexico
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style french
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
¿Cómo crear un analizador de datos a través de regresión matemática en Línea?
\end_layout

\begin_layout Chapter
Instalación de Componentes Necesarios
\end_layout

\begin_layout Enumerate
Node JS: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://nodejs.org/es/
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Angular CLI: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://cli.angular.io/
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Visual Studio Code: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Plugins de VSC: 
\end_layout

\end_deeper
\begin_layout Enumerate
PostMan 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Git Version 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
PostgresSQL 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Crear el Proyecto
\end_layout

\begin_layout Enumerate
Crear la estructura del proyecto
\end_layout

\begin_layout Enumerate
Instalar Bootstrap 4
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

npm install --save bootstrap 
\end_layout

\begin_layout Plain Layout

npm install --save jquery
\end_layout

\begin_layout Plain Layout

npm install --save popper.js
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Instalar Fontawesome
\end_layout

\begin_deeper
\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

npm install --save @fortawesome/fontawesome-free
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Instalar Angular Material
\end_layout

\begin_deeper
\begin_layout Enumerate
\begin_inset ERT
status open

\begin_layout Plain Layout

ng add @angular/material
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Chapter
Crear el Angular Routing
\end_layout

\begin_layout Standard
Para crear el angular Routing vamos a pegar este código
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

import { Routes, RouterModule } from '@angular/router';
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

const routes: Routes = [
\end_layout

\begin_layout Plain Layout

  { path: 'inicio', component: InicioComponent },
\end_layout

\begin_layout Plain Layout

  { path: '**', pathMatch: 'full', redirectTo: 'inicio' }
\end_layout

\begin_layout Plain Layout

];
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

export const routingModule = RouterModule.forRoot(routes, {useHash: true});
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Estructura de la Base de Datos
\end_layout

\begin_layout Enumerate
Crear la estructura de la base de datos en LucidChart
\end_layout

\begin_layout Enumerate
Crear el código SQL para la base de datos
\end_layout

\begin_layout Chapter
Crear el Servidor DataSnap
\end_layout

\begin_layout Enumerate
Crear el servidor DataSnap usando Delphi Rad Studio
\end_layout

\begin_layout Enumerate
Probar el primer servicio en PostMan
\end_layout

\end_body
\end_document
